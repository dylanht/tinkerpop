////
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
////

TinkerPop 3.3.0
===============

image::https://raw.githubusercontent.com/apache/tinkerpop/master/docs/static/images/gremlin-mozart.png[width=225]

*Gremlin Symphony #40 in G Minor*

TinkerPop 3.3.0
---------------

*Release Date: NOT OFFICIALLY RELEASED YET*

Please see the link:https://github.com/apache/tinkerpop/blob/3.3.3/CHANGELOG.asciidoc#release-3-3-0[changelog] for a complete list of all the modifications that are part of this release.

Upgrading for Users
~~~~~~~~~~~~~~~~~~~

GraphTraversal Has-Methods Re-Organized
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

`GraphTraversal.hasXXX()`, where `XXX` is `Id`, `Label`, `Key`, `Value`, was faulty in that they relied on calling an
intermediate method for flattening `Object[]` arguments and thus, yielding a non 1-to-1 correspondence between `GraphTraversal`
and `Bytecode`. This has been remedied. Most users will not notice this change. Perhaps only some users that may use
Java reflection over `GraphTraversal` might have a simple problem.


See: link:https://issues.apache.org/jira/browse/TINKERPOP-1520[TINKERPOP-1520]

SelectStep Defaults to Pop.last
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

`SelectStep` and `SelectOneStep` (`select()`) are the only `Scoping` steps that default to `Pop.mixed` as their labeled path
selection criteria. All other steps, like `match()`, `where()` and `dedup()`, use `Pop.last`. In order to better enable optimizations
around total `Pop.last` traversals, the `select()`-steps now default to `Pop.last`. Most users will not notice a difference as
it is rare for repeated labels to be used in practice. However, formal backwards compatibility is possible as outlined below.

Assuming that `x` is not a `Pop` argument:

1. Change all `select(x,y,z)` calls to `selectV3d2(x,y,z)` calls.
2. Change all `select(x,y,z)`-step calls to `select(Pop.mixed,x,y,z)`.

If an explicit `Pop` argument is provided, then no changes are required.

See: link:https://issues.apache.org/jira/browse/TINKERPOP-1541[TINKERPOP-1541]

OptionalStep and Side-Effects
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

The `optional()`-step was previously implemented using `ChooseStep`. However, if the optional branch contained side-effects,
then unexpected behaviors can emerge. Thus, a potential backwards compatibility issue arises if side-effects were being
used in `optional()`. However, the behavior would be unpredictable so this backwards incompatibility is desirable.

See link:https://issues.apache.org/jira/browse/TINKERPOP-1506[TINKERPOP-1506]

Gremlin Console Script Execution
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

It is no longer possible to run a script in execution mode in the Gremlin Console from the terminal without use of `-e`.
In other words, prior versions allowed:

[source,text]
bin/gremlin.sh gremlin.groovy

Such a command must now be written as:

[source,text]
bin/gremlin.sh -e gremlin.groovy

See: link:https://issues.apache.org/jira/browse/TINKERPOP-1283[TINKERPOP-1283]

GraphTraversal valueMap() Signature Updated
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

`GraphTraversal.valueMap(includeTokens,propertyKeys...)` now returns a `Map<Object,E>` to account for the presence of `T.id` or `T.label` if you pass `true` to it.

See: link:https://issues.apache.org/jira/browse/TINKERPOP-1283[TINKERPOP-1483]

Deprecation Removal
^^^^^^^^^^^^^^^^^^^

The following deprecated classes, methods or fields have been removed in this version:

* `gremlin-console`
** `org.apache.tinkerpop.gremlin.console.Console(String)`
* `gremlin-groovy`
** `org.apache.tinkerpop.gremlin.groovy.engine.ConcurrentBindings`
** `org.apache.tinkerpop.gremlin.groovy.jsr223.GremlinGroovyScriptEngine(ImportCustomizerProvider)`
** `org.apache.tinkerpop.gremlin.groovy.jsr223.GremlinGroovyScriptEngine#plugins()`
** `org.apache.tinkerpop.gremlin.groovy.jsr223.ScriptExecutor`
** `org.apache.tinkerpop.gremlin.groovy.jsr223.customizer.SandboxExtension`

Please see the javadoc deprecation notes or upgrade documentation specific to when the deprecation took place to
understand how to resolve this breaking change.

See: link:https://issues.apache.org/jira/browse/TINKERPOP-1283[TINKERPOP-1283], link:https://issues.apache.org/jira/browse/TINKERPOP-1420[TINKERPOP-1420],
link:https://issues.apache.org/jira/browse/TINKERPOP-833[TINKERPOP-833], link:https://issues.apache.org/jira/browse/TINKERPOP-1040[TINKERPOP-1040]

Upgrading for Providers
~~~~~~~~~~~~~~~~~~~~~~~

Graph Database Providers
^^^^^^^^^^^^^^^^^^^^^^^^

Performance Tests
+++++++++++++++++

Performance tests based on `junit-benchmarks` have been removed from TinkerPop. Specifically, providers should be
concerned with breaking changes related to the removal of:

* `StructurePerformanceSuite`
* `ProcessPerformanceSuite`
* `GroovyEnvironmentPerformanceSuite`

Those graph providers who relied on these tests should simply remove them from their respective test suites.

See: link:https://issues.apache.org/jira/browse/TINKERPOP-1235[TINKERPOP-1235]

Gremlin-server.sh and Init Scripts
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

`gremlin-server.sh` is now also an init script and can no longer be started without parameters. To start it in the foreground with defaults like previous usage, please use the `console` parameter. Also, `gremlin-server.sh` will continue to start in the foreground when provided a yaml configuration file.

How to install as a service has been added to the link:http://tinkerpop.apache.org/docs/3.3.0/reference/#_as_a_service[Reference Documentation - As A Service].

The switch name has changed for installing dependencies. `-i` has been deprecated and replaced by `install`.

See: link:https://issues.apache.org/jira/browse/TINKERPOP-980[TINKERPOP-980], link:http://tinkerpop.apache.org/docs/3.3.0/reference/#_configuring_2[Reference Documentation - Server Configuration].

Gremlin-server.bat
^^^^^^^^^^^^^^^^^^

The switch name has changed for installing dependencies. `-i` has been deprecated and replaced by `install`.

SparkGraphComputer GryoRegistrator
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Historically, `SparkGraphComputer` has  used `GryoSerializer` to handle the serialization of objects in Spark. The reason
this exists is because TinkerPop uses a shaded version of Kryo and thus, couldn't use the standard `KryoSerializer`-model
provided by Spark. However, a "shim model" was created which allows for the shaded and unshaded versions of Kryo to
interact with one another. To this end, `KryoSerializer` can now be used with a `GryoRegistrator`. The properties file
for a `SparkGraphComputer` now looks as follows:

```
spark.serializer=org.apache.spark.serializer.KryoSerializer
spark.kryo.registrator=org.apache.tinkerpop.gremlin.spark.structure.io.gryo.GryoRegistrator
```

If the old `GryoSerializer` model is desired, then the properties file should simply look as before:

```
spark.serializer=org.apache.tinkerpop.gremlin.spark.structure.io.gryo.GryoSerializer
```
